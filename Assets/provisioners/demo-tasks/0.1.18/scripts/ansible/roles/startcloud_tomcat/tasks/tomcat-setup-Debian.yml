--- 
-
  name: "Creating Tomcat directories"
  file:
    path: "{{ item }}"
    state: directory
    recurse: yes
  with_items:
    - "/etc/tomcat{{ tomcat_version }}/webapps/host-manager/META-INF"                                                                                                      
    - "/etc/tomcat{{ tomcat_version }}/webapps/manager/META-INF"


- 
  name: "Creating a keystore for the self-signed certificate/private key pair"
  when: selfsigned_enabled
  become_user: "{{ service_user }}"
  java_keystore:
    name: "{{ settings.hostname }}.{{ settings.domain }}"
    certificate: "{{ lookup('file', '{{ cert_dir }}/crt/{{ settings.hostname }}.{{ settings.domain }}-self-signed.crt') }}"
    private_key: "{{ lookup('file', '{{ cert_dir }}/key/{{ settings.hostname }}.{{ settings.domain }}-self-signed.key') }}"
    password: "{{ cert_pass }}"
    owner: "{{ service_user }}"
    mode: '0777'
    dest: "{{ cert_dir }}/jks/{{ settings.hostname }}.{{ settings.domain }}-self-signed.jks"
  environment:
    PATH: "{{ ansible_env.PATH }}:{{ service_home_dir }}/.sdkman/candidates/java/current/bin"

- 
  name: "Creating a keystore for the given certificate/private key pair"
  when: not selfsigned_enabled
  become: yes
  become_user: "{{ service_user }}"
  java_keystore:
    name: "{{ settings.hostname }}.{{ settings.domain }}"
    certificate: "{{ lookup('file', '{{ cert_dir }}/crt/default-signed.crt') }}"
    private_key: "{{ lookup('file', '{{ cert_dir }}/key/default-signed.key') }}"
    password: "{{ cert_pass }}"
    owner: "{{ service_user }}"
    mode: '0777'
    dest: "{{ cert_dir }}/jks/default-signed.jks"
  environment:
    PATH: "{{ ansible_env.PATH }}:{{ service_home_dir }}/.sdkman/candidates/java/current/bin"

- 
  name: "Adding group {{ tomcat_group }} for user {{ tomcat_user }}"
  group:
    name: "{{ tomcat_group }}"

- 
  name: "Adding {{ tomcat_user }} user"
  user:
    name: "{{ tomcat_user }}"
    group: "{{ tomcat_group }}"
    home: "{{ tomcat_home_dir }}"
    createhome: yes
    system: yes

#- name: "Downloading Tomcat {{ tomcat_version }}"
#  get_url:
#    url: "{{ tomcat_archive_url }}"
#    dest: "{{ tomcat_archive_dest }}"
#

#
#- name: "Extracting tomcat archive"
#  unarchive:
#    src: "{{ tomcat_archive_dest }}"
#    dest: /usr/share/tomcat{{ tomcat_version }}
#    owner: tomcat
#    group: "{{ tomcat_group }}"
#    remote_src: yes
#    extra_opts: "--strip-components=1"
#    creates: /usr/share/tomcat{{ tomcat_version }}/bin
#
#- name: "Copying tomcat service file"
#  template:
#    src: templates/tomcat.service.j2
#    dest: /etc/systemd/system/tomcat.service
#  when: ansible_service_mgr == "systemd"

- 
  name: "Installing Tomcat {{ tomcat_version }}"
  apt:
    name:
      - "tomcat{{ tomcat_version }}"
      - "tomcat{{ tomcat_version }}-admin"
      - "tomcat{{ tomcat_version }}-common"
      - "tomcat{{ tomcat_version }}-user"

- 
  name: "Starting and Enabling Tomcat {{ tomcat_version }}"
  service:
    daemon_reload: yes
    name: "tomcat{{ tomcat_version }}"
    state: started
    enabled: yes

- 
  name: "Setting UI access credentials"
  template:
    src: "tomcat-users.xml.j2"
    dest: "/etc/tomcat{{ tomcat_version }}/tomcat-users.xml"
  notify: restart tomcat

- 
  name: "Allowing access to Manager and Host Manager apps from any IP"
  template:
    src: "context.xml.j2"
    dest: "{{ item }}"
  with_items:
    - "/etc/tomcat{{ tomcat_version }}/context.xml"
  notify: restart tomcat

- 
  name: "Configuring Tomcat{{ tomcat_version }}"
  template:
    src: "server.xml.j2"
    dest: "{{ item }}"
  with_items:
    - "/etc/tomcat{{ tomcat_version }}/server.xml"
  notify: "restart tomcat"

- 
  name: "Starting and Enabling Tomcat {{ tomcat_version }}"
  service:
    daemon_reload: yes
    name: "tomcat{{ tomcat_version }}"
    state: restarted
    enabled: yes