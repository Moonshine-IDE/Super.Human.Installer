# config file for ansible -- https://ansible.com/
# ===============================================
[defaults]
enable_task_debugger = False
#strategy = free, linear, debug
strategy = linear
#inventory      = /etc/ansible/hosts
#library        = /usr/share/my_modules/
#module_utils   = /usr/share/my_module_utils/
#remote_tmp     = ~/.ansible/tmp
#local_tmp      = ~/.ansible/tmp
#plugin_filters_cfg = /etc/ansible/plugin_filters.yml
#forks          = 5
#poll_interval  = 15
#sudo_user      = root
#ask_sudo_pass = True
#ask_pass      = True
#transport      = smart
#remote_port    = 22
#module_lang    = C
#module_set_locale = False
# gather_timeout = 10
roles_path    = /vagrant/ansible
vault_password_file = /vagrant/ansible/git_vault_password
collections_paths = /vagrant/ansible_collections
host_key_checking = False
force_color = True
localhost_warning=False
ansible_winrm_server_cert_validation=ignore 

# change the default callback, you can only have one 'stdout' type  enabled at a time.
stdout_callback =  default
#stdout_callback = yaml
#stdout_callback = actionable
#stdout_callback =  log_plays
bin_ansible_callbacks = True
show_per_host_start = True
show_task_path_on_failure = True
check_mode_markers = true
# If set, configures the path to the Vault password file as an alternative to
# specifying --vault-password-file on the command line.

ansible_managed = Ansible managed

display_skipped_hosts = False
display_ok_hosts = True
# logging is off by default unless this path is defined
# if so defined, consider logrotate
log_path =  ~/ansible.log

#[callback_log_plays]
#log_folder = /vagrant/ansible

# if inventory variables overlap, does the higher precedence one win
# or are hash values merged together?  The default is 'replace' but
# this can also be set to 'merge'.
#hash_behaviour = replace

# by default, variables from roles will be visible in the global variable
# scope. To prevent this, the following option can be enabled, and only
# tasks and handlers within the role will see the variables there
#private_role_vars = yes

# list any Jinja2 extensions to enable here:
#jinja2_extensions = jinja2.ext.do,jinja2.ext.i18n

#display_args_to_stdout = False

# by default (as of 1.6), Ansible may display warnings based on the configuration of the
# system running ansible itself. This may include warnings about 3rd party packages or
# other conditions that should be resolved if possible.
# to disable these warnings, set the following value to False:
#system_warnings = True
#deprecation_warnings = True
#command_warnings = True
nocows = 1
nocolor = 0
squash_actions = apk,apt,dnf,homebrew,pacman,pkgng,yum,zypper
#no_log = False
#no_target_syslog = False
#allow_world_readable_tmpfiles = False

# This controls how ansible handles multiple --tags and --skip-tags arguments
# on the CLI.  If this is True then multiple arguments are merged together.  If
# it is False, then the last specified argument is used and the others are ignored.
# This option will be removed in 2.8.
#merge_multiple_cli_flags = True

# Controls showing custom stats at the end, off by default
#show_custom_stats = True

# When enabled, this option allows lookups (via variables like {{lookup('foo')}} or when used as
# a loop with `with_foo`) to return data that is not marked "unsafe". This means the data may contain
# jinja2 templating language which will be run through the templating engine.
# ENABLING THIS COULD BE A SECURITY RISK
#allow_unsafe_lookups = False

# set default errors for all plays
#any_errors_fatal = False

[inventory]
# enable inventory plugins, default: 'host_list', 'script', 'yaml', 'ini'
#enable_plugins = host_list, virtualbox, yaml, constructed
#ignore_extensions = .pyc, .pyo, .swp, .bak, ~, .rpm, .md, .txt, ~, .orig, .ini, .cfg, .retry
#ignore_patterns=
#unparsed_is_failed=False
inventory_unparsed_warning=False

[privilege_escalation]
#become=True
#become_method=sudo
#become_user=root
#become_ask_pass=False


[ssh_connection]
# Enabling pipelining reduces the number of SSH operations required to
# execute a module on the remote server. This can result in a significant
# performance improvement when enabled, however when using "sudo:" you must
# first disable 'requiretty' in /etc/sudoers
#
# By default, this option is disabled to preserve compatibility with
# sudoers configurations that have requiretty (the default on many distros).
#
pipelining = True
# The -tt argument is passed to ssh when pipelining is not enabled because sudo
# requires a tty by default.
#use_tty = True

[persistent_connection]
connect_timeout = 60
connect_retry_timeout = 15
command_timeout = 30

[accelerate]
#accelerate_port = 5099
#accelerate_timeout = 30
#accelerate_connect_timeout = 5.0
#accelerate_daemon_timeout = 30
#accelerate_multi_key = yes
