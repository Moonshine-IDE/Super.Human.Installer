name: MacOS Sign
  
on:
  - workflow_dispatch
  - workflow_call
  
jobs:
  build:
    name: Build
    runs-on: macos-latest
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          lfs: true
          
      - name: Checkout LFS objects
        run: git lfs checkout

      - name: Read version
        id: readversion
        uses: mavrosxristoforos/get-xml-info@1.1.1
        with:
          xml-file: 'project.xml'
          xpath: '/project/meta/@version'

      - name: Set up Haxe
        uses: krdlab/setup-haxe@v1
        with:
          haxe-version: 4.2.5

      - name: Install dependencies
        run: | 
          haxelib install hxcpp
          haxelib install openfl
          haxelib run openfl setup
          haxelib install feathersui
          
      - name: Build project
        run: |
          haxelib run openfl build project.xml mac -debug -Dlogverbose -Dlogcolor
            
      - name: Create keychain and import certs
        run: |
          # Turn our base64-encoded certificate back to a regular .p12 file    
          echo ${{ secrets.MAC_ALL_CERTS }} | base64 --decode > mac-all-certs.p12
          echo ${{ secrets.MAC_KEYS_1 }}${{ secrets.MAC_KEYS_2 }} | base64 --decode > mac-all-keys.p12
          # Create keychain
          security create-keychain -p ${{ secrets.MAC_KEYCHAIN_PASS }} build.keychain
          security set-keychain-settings -lut 21600 build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p ${{ secrets.MAC_KEYCHAIN_PASS }} build.keychain
          echo "Keychain created"
          # Import
          security import ./mac-all-keys.p12 -k build.keychain -f pkcs12 -P ${{ secrets.MAC_PASS }} -T /usr/bin/productsign -T /usr/bin/codesign
          security import ./mac-all-certs.p12 -k build.keychain -f pkcs12 -P ${{ secrets.MAC_PASS }} -T /usr/bin/productsign -T /usr/bin/codesign
          security unlock-keychain -p ${{ secrets.MAC_KEYCHAIN_PASS }} build.keychain
          security set-key-partition-list -S apple-tool:,apple:,codesign:,productsign: -s -k ${{ secrets.MAC_KEYCHAIN_PASS }} build.keychain
          
      - name: Sign contents
        run: |
          /usr/bin/codesign --force -s ${{ secrets.MAC_CERT_ID }} --options runtime --timestamp Export/Development/macos/bin/SuperHumanInstallerDev.app/Contents/Entitlements.plist -v
          /usr/bin/codesign --force -s ${{ secrets.MAC_CERT_ID }} --options runtime --timestamp Export/Development/macos/bin/SuperHumanInstallerDev.app/Contents/Info.plist -v
          /usr/bin/codesign --force -s ${{ secrets.MAC_CERT_ID }} --options runtime --timestamp Export/Development/macos/bin/SuperHumanInstallerDev.app/Contents/MacOS/lime.ndll -v
          /usr/bin/codesign --force -s ${{ secrets.MAC_CERT_ID }} --options runtime --timestamp Export/Development/macos/bin/SuperHumanInstallerDev.app/Contents/MacOS/SuperHumanInstallerDev -v
          /usr/bin/codesign --force -s ${{ secrets.MAC_CERT_ID }} --options runtime --timestamp Export/Development/macos/bin/SuperHumanInstallerDev.app -v
          
      - name: Verify singature
        run: |
          codesign -dv -r- Export/Development/macos/bin/SuperHumanInstallerDev.app
          codesign -vv Export/Development/macos/bin/SuperHumanInstallerDev.app          

      - name: Create package
        run: |
          productbuild \
            --version ${{ steps.readversion.outputs.info }} \
            --product Templates/installer/SuperHumanInstaller.template.plist \
            --identifier net.prominic.genesis.superhumaninstallerdev \
            --component Export/Development/macos/bin/SuperHumanInstallerDev.app \
            /Applications \
            ./SuperHumanInstallerDev-Setup-Unsigned.pkg
            
      - name: Sign installer
        run: |
          /usr/bin/productsign --timestamp --sign ${{ secrets.MAC_CERT_INSTALLER_ID }} ./SuperHumanInstallerDev-Setup-Unsigned.pkg ./SuperHumanInstallerDev-Setup.pkg
          
      - name: Verify installer signature
        run: |
          pkgutil --check-signature ./SuperHumanInstallerDev-Setup.pkg
          # spctl -vv --assess --type install ./SuperHumanInstallerDev-Setup.pkg          
            
      - name: Delete keychain
        run: |
          security delete-keychain build.keychain
            
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with: 
          name: SuperHumanInstallerDev-Setup
          path: ./SuperHumanInstallerDev-Setup.pkg
