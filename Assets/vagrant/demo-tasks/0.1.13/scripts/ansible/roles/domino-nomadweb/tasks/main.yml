---
-
  name: "Creating installation directories for NomadWeb"
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ installer_dir }}/nomadweb/archives"
    - "{{ installer_dir }}/nomadweb/NomadWeb"

- 
  name: "Checking if NomadWeb {{ nomadweb_version }} is installed"
  register: nomadweb_installed_check
  stat:
    path: "{{ completed_dir }}/nomadweb_install"
    get_md5: no

- 
  name: "Checking if the NomadWeb {{ nomadweb_version }} installer is at {{ installer_dir }}/nomadweb/archives/{{ nomadweb_archive }}"
  register: nomad_archive_check
  stat:
    path: "{{ installer_dir }}/nomadweb/archives/{{ nomadweb_archive }}"
    get_md5: no

#- 
#  name: "Downloading NomadWeb {{ nomadweb_version }} from {{ domino_installer_base_url }}"
#  register: nomadwebresult
#  until: "nomadwebresult is not failed"
#  retries: 3
#  get_url:
#    url: "{{ domino_installer_base_url }}/ND{{ domino_major_version }}/NomadWeb/{{ nomadweb_archive }}"
#    dest: "{{ installer_dir }}/nomadweb/archives/{{ nomadweb_archive }}"
#    username: "{{ domino_installer_url_user }}"
#    password: "{{ secrets.domino_installer_url_pass }}"
#  when: nomad_archive_check.stat.exists == False and nomadweb_installed_check.stat.exists == False

-
  name: "Extracting NomadWeb {{ nomadweb_version }} from {{ nomadweb_archive }}"
  when: nomadweb_installed_check.stat.exists == False
  unarchive:
    mode: "a+x"
    owner: "{{ domino_user }}"
    group: "{{ domino_group }}"
    src: "{{ installer_dir }}/nomadweb/archives/{{ nomadweb_archive }}"
    dest: "{{ installer_dir }}/nomadweb/NomadWeb"
    creates: "{{ installer_dir }}/nomadweb/NomadWeb/nwsp-linux"
    remote_src: true

-
  name: "Copying Nomadweb {{ nomadweb_version }} installer files to {{ domino_install_dir }}"
  when: nomadweb_installed_check.stat.exists == False
  copy:
    mode: "a+x"
    src: "{{ installer_dir }}/nomadweb/NomadWeb/"
    dest: "{{ domino_install_dir }}"

-
  name: "Configuring NomadWeb"
  when: "nomadweb_installed_check.stat.exists == False"
  shell: "{{ item }}"
  become: true
  args:
    executable: "/bin/bash"
  register: nomadweb_config_status
  with_items:
    - 'domino cmd "set config NOMAD_WEB_HOST={{ nomadweb_url }}" 20'

- 
  name: "Outputting NomadWeb Configuration Status Logs"
  when: nomadweb_debug and nomadweb_installed_check.stat.exists == False
  debug: 
    var: nomadweb_config_status

-
  name: "Stopping Domino for Changes to take effect"
  when: nomadweb_installed_check.stat.exists == False
  become: true
  service:
    name: domino
    state: stopped
    enabled: yes
  register: DominoServiceDetailsStop
  until: DominoServiceDetailsStop.state == "stopped"
  retries: 3
  delay: 5

-
  name: "Starting Domino for Changes to take effect"
  when: nomadweb_installed_check.stat.exists == False
  service:
    name: domino
    state: started
    enabled: yes
  register: DominoServiceDetailsStart
  retries: 3
  delay: 5
  until: DominoServiceDetailsStart.state == "started"

- 
  name: "Checking NomadWeb is listening on port {{ nomadweb_port }}"
  wait_for:
    port: "{{ nomadweb_port }}"
    delay: 5
    timeout: 60
    msg: "Timeout waiting for {{ nomadweb_port }} to respond"
  register: port_check

-
  name: "Configuring NomadWeb and Starting Service"
  when: nomadweb_installed_check.stat.exists == False
  file:
    path: "{{ item }}"
    state: touch
  with_items:
    - "{{ completed_dir }}/nomadweb_install"



