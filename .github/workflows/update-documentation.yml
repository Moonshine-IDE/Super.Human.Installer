name: Update Documentation

on:
  workflow_dispatch:
  push:
    branches:
      - 'master'
  release:
    types: [published]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: [self-hosted, linux]
    env:
      RUBY_VERSION: '3.4.3' # Define Ruby version as an environment variable
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: sudo apt-get update && sudo apt-get install -y --no-install-recommends autoconf bison build-essential g++ make libssl-dev libyaml-dev libreadline-dev zlib1g-dev libncurses5-dev libffi-dev libgdbm-dev

      - name: Update rbenv and ruby-build definitions
        run: |
          whoami
          pwd
          if [ -d "/home/startcloud/.rbenv/plugins/ruby-build" ]; then
            echo "Updating ruby-build..."
            git -C "/home/startcloud/.rbenv/plugins/ruby-build" pull
          else
            echo "ruby-build plugin not found in rbenv root. Assuming rbenv manages it elsewhere or it's up-to-date."
          fi

      - name: Install Ruby ${{ env.RUBY_VERSION }} using rbenv
        run: |
          rbenv install ${{ env.RUBY_VERSION }} --skip-existing
          echo "Ruby ${{ env.RUBY_VERSION }} installation checked/completed."

      - name: Set Ruby version
        run: rbenv local ${{ env.RUBY_VERSION }}

      - name: Rehash rbenv shims
        run: rbenv rehash

      - name: Install Bundler and Gems
        run: |
          eval "$(rbenv init - bash)" # Initialize rbenv for this shell session
          gem install bundler -v '~> 2.3' # Install a specific bundler version if needed
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Build with Jekyll
        run: |
          eval "$(rbenv init - bash)"
          bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        working-directory: ./
        env:
          JEKYLL_ENV: production

      - name: Generate versioninfo and place in site output
        run: |
          python3 DevOps/generate-vinfo.py
          mv versioninfo.json ./_site/versioninfo.json

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
