------------------------------------------------------------------------------------
### Domino commands ###
------------------------------------------------------------------------------------
1) View the status of the automatic setup:
    cat {{ domino_home_dir }}/IBM_TECHNICAL_SUPPORT/autoconfigure.log

2) Start Domino via screen or "sudo service domino start":
    Screen)
        ./vagrant_ssh.sh
        screen
        sudo su
        su - domino
        {{ domino_install_basedir }}/bin/server
        "<ctrl>-d" to detach from screen
        "screen -ls" to list screen sessions
        "screen -r" to resume screen session
    Service)
        "sudo service domino restart"


3) Issue Domino commands
    help
    sh server
    sh tasks
    load http
    tell http show thread state
    tell http show security
    load runjava
    tell runjava quit
    tell runjava show tasks
    exit

4) Retrieve the user.id from {{ service_home_dir }}/user.id via:
    1.HTTP: https://{{ ansible_all_ipv4_addresses[0] }}/downloads
    2.SFTP/SCPing

    The user.id password is the one defined in the setup.json which is currently 'password'
    You can know use this user.id in a Notes, Administrator or Designer Client.

-----------------------------------------------------------------------------
### Begin Stand-alone Java testing commands ###
-----------------------------------------------------------------------------

Run this command ONCE after creating a fresh instance to generate {{ service_home_dir }}/names.nsf:
-Set the java_helper_application_install variable to true in your Hosts.yaml
-run vagrant provision. This will:
        Create a fresh names database: `cd {{ service_home_dir }}; java -jar ./CreateNamesDatabase.jar`
        Password is the one defined in the setup.json which is currently "{{ domino_admin_notes_id_password }}"

Accesst the server via "vagrant ssh"
Test stand-alone Java API operations:
-Verify user:
    `cd {{ service_home_dir }}; java -jar ./CheckNotesUser.jar`

-Verify connection to database:
    `cd {{ service_home_dir }}; java -jar ./CheckDatabase.jar <server> <database>`

Source code and build scripts are located in the VM here:
    /vagrant/domino/domino-java-helpers

-----------------------------------------------------------------------------
### Begin To test Java servlets:
-----------------------------------------------------------------------------

Managing Java™ servlets on a Web server
    https://help.hcltechsw.com/domino/12.0.0/admin/conf_managingjavaservletsonawebserver_t.html

Including Java™ servlets in Web applications
    https://help.hcltechsw.com/dom_designer/12.0.0/basic/H_OVERVIEW_OF_JAVA_SERVLETS.html

Java Servlet Specification (prior to EE4J initiative transition):
    https://javaee.github.io/servlet-spec/

Elipse EE4J Project:
    https://github.com/eclipse-ee4j

Java Servlet 4.0 API Specification:
    https://javadoc.io/doc/javax.servlet/javax.servlet-api/latest/index.html

Introduction to Servlets with examples:
    https://www3.ntu.edu.sg/home/ehchua/programming/java/JavaServlets.html
-----------------------------------------------------------------------------
